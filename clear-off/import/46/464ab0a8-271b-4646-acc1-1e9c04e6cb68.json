[1,0,0,[["cc.TextAsset",["_name","text"],1]],[[0,0,1,3]],[[0,"m-promise.d","/**\r\n * 可取消回调处理的Promise\r\n * @author Howe.Ma\r\n */\r\ndeclare class MPromise<T> extends Promise {\r\n    /**\r\n     * 继承Promise  增加options，包含取消状态cancellend。\r\n     * 当Promise有取消需求时，请再异步完结处，判断options.cancellend\r\n     * 如果为true，就阻止回调后的操作，也不要再调用resolve 和 reject \r\n     * @param executor 执行器\r\n     */\r\n    constructor(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void,\r\n        options: ?{ cancellend: boolean }) => void): Mpromise<T>;\r\n\r\n    /**\r\n     * 取消promise\r\n     */\r\n    cancel();\r\n\r\n    /**\r\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\r\n     * @param onfulfilled The callback to execute when the Promise is resolved.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of which ever callback is executed.\r\n     */\r\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;\r\n\r\n    /**\r\n     * Attaches a callback for only the rejection of the Promise.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of the callback.\r\n     */\r\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;\r\n\r\n}\r\n\r\n\r\n"]],0,0,[],[],[]]